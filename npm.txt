npm是随nodejs一起安装的包管理工具
常见使用场景：
1、允许用户从NPM服务器下载别人编写的第三方包到本地使用。
2、允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。
3、允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。

通过npm -v测试是否安装，检查版本

升级npm：$ npm install npm -g

安装nodejs模块语法：$ npm install <Module Name>
如安装nodejs常用的web框架模块express
$ npm install express 本地安装
$ npm install express -g 全局安装
若出现错误：npm err! Error: connect ECONNREFUSED 127.0.0.1:8087 
解决方法：$ npm config set proxy null
安装好后加载该模块方式：var express = require('express');

本地安装
1. 将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。
2. 可以通过 require() 来引入本地安装的包。
全局安装
1. 将安装包放在 /usr/local 下或者你 node 的安装目录。
2. 可以直接在命令行里使用。
如果你希望具备两者功能，则需要在两个地方安装它或使用 npm link。

你可以使用以下命令来查看所有全局安装的模块：
$ npm list -g

如果要查看某个模块的版本号，可以使用命令如下：
$ npm list grunt

使用 package.json
package.json 位于模块的目录下，用于定义包的属性

Package.json 属性说明
name - 包名。
version - 包的版本号。
description - 包的描述。
homepage - 包的官网 url 。
author - 包的作者姓名。
contributors - 包的其他贡献者姓名。
dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。
repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。
main - main 字段指定了程序的主入口文件，require('moduleName') 就会加载这个文件。这个字段的默认值是模块根目录下面的 index.js。
keywords - 关键字

卸载模块
我们可以使用以下命令来卸载 Node.js 模块。
$ npm uninstall express

我们可以使用以下命令更新模块：
$ npm update express

使用以下来搜索模块：
$ npm search express

国内使用npm非常慢，你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:
$ npm install -g cnpm --registry=https://registry.npm.taobao.org